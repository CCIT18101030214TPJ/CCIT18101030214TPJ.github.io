{"meta":{"title":"转生 | 你在吗(⌒▽⌒)","subtitle":"记录生活的点点滴滴","description":"我是一个爱笑的人，但不是一个开心的人","author":"hyp","url":"http://www.tpjun.top"},"pages":[{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-03-21T16:09:09.056Z","comments":false,"path":"bangumi/index.html","permalink":"http://www.tpjun.top/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-03-25T06:08:30.413Z","comments":false,"path":"about/index.html","permalink":"http://www.tpjun.top/about/index.html","excerpt":"","text":"[いますかhyp] 与&nbsp; hyp&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"client/index.html","permalink":"http://www.tpjun.top/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-03-22T10:53:12.244Z","comments":true,"path":"comment/index.html","permalink":"http://www.tpjun.top/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-25T03:05:37.353Z","comments":false,"path":"donate/index.html","permalink":"http://www.tpjun.top/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"lab/index.html","permalink":"http://www.tpjun.top/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2020-03-22T04:00:00.000Z","updated":"2020-03-22T10:42:55.111Z","comments":true,"path":"links/index.html","permalink":"http://www.tpjun.top/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-03-22T07:57:53.449Z","comments":false,"path":"music/index.html","permalink":"http://www.tpjun.top/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-02-14T09:11:23.000Z","comments":true,"path":"rss/index.html","permalink":"http://www.tpjun.top/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-02-14T09:11:23.000Z","comments":true,"path":"tags/index.html","permalink":"http://www.tpjun.top/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://www.tpjun.top/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"video/index.html","permalink":"http://www.tpjun.top/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"win10搭建Hexo——超详细","slug":"Win10+hexo","date":"2020-03-28T14:16:01.000Z","updated":"2020-03-31T14:44:35.884Z","comments":true,"path":"2020/03/28/Win10+hexo/","link":"","permalink":"http://www.tpjun.top/2020/03/28/Win10+hexo/","excerpt":"","text":"关于博客对于小白来说可以是一头雾水，由于网上的教程很多不完整，让人很头疼，接下来我对win10系统怎样搭建hexo搭建做个解析，可以帮助小白创建一个属于自己的博客。 Hexo简介Hexo是一款基于Node.js的静态博客框架，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入hexo官网进行详细的查看，这个可选择中文查看。 #搭建流程简绍：1.安装git 2.安装Nodejs 3.安装Hexo 4.注册Github账号并创建仓库 5.SSH相关配置 6.将Hexo部署到Github 7.发布文章 8.Hexo 常用的命令 #Step 1：安装Git 1.下载 点击Git官网下载对应的版本，win10一般是64位。 2.安装 在安装过程中一路next 3.检查git是否安装成功 在CMD窗口（R+win输入cmd即可打开CMD窗口)输入指令： git 结果会显示： 到这里git就安装好了，这时会有一个Git Bash的命令工具（鼠标右击就会出现）。 #Step 2：下载配置Nodejs1.下载 进入nodejs下载，根据自己的电脑选择32位或64位。 2.安装 在安装过程中一路next即可。 3.检查是否成功 在CMD窗口（R+win输入cmd即可打开CMD窗口)输入指令： | node -v | npm -v 结果显示如下代表安装成功 #Step 3：安装Hexo前面git和nodejs安装好后，就可以安装hexo博客框架了。 首先创建一个文件夹，命名为你想要的名字，我的名字是blog，这个文件夹在后续就是用来存放你所创建博客的所有文件。这个文件也称根目录。 1.安装Hexo 在这个blog文件夹（你所创建的文件夹）下直接鼠标右键git bash打开，这个时候会有命令窗口弹出。或者（win+r）输入cmd，然后cd到你创建的blog文件夹。 在窗口中输入： npm install -g hexo-cli 然后等待安装，显示如下： 2.检验是否安装成功 在窗口中接着输入hexo -v来检验是否安装成功 hexo -v 结果显示： 至此已全部安装完。 3.初始化网址 在窗口中接着输入： hexo init 这个过程可能会比较慢，请耐心等待 结果如下： 表明初始化已成功。 4.安装网址所需要的依赖插件 在窗口中接着输入： npm install 完成后，在你的根目录（blog文件夹）下会出现以下文件： 在这里解释一下： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息 5.生成静态网页和开启本地服务 在窗口中接着输入： hexo g//生成静态网址 hexo s//开启本地服务器 结果显示： 这就代表启动成功了。 在浏览器输入网址http://localhost:4000就可以查看你的本地博客网页了。 页面如下： 如果想关闭本地服务，Ctrl+C 就可以了 或者关闭这个命令窗口。 注：每次想浏览你的本地博客都需在你的根目录下鼠标右击打开git bash 在窗口中输入hexo s命令字符。 #Step4：注册Github账号并创建仓库1.注册github 首先你要在github上注册一个账号，步骤如下： 步骤1：填写你的用户名，Email，密码。 步骤2：进入Step1，填写用户名，Email,密码。后面会有验证，会通过qq邮箱发送给你，进行验证。 步骤3：进入Step2，选择仓库。 步骤4：进入Step3，让你做一些选择，完善一些信息。也可以直接跳过步骤，这样你的账号就注册好了。 2.创建仓库 注册完上面步骤后登录，进行以下创建仓库步骤： 步骤1：点击new repository新建 步骤2：创建一个和你用户名相同的仓库，如：你的用户名+.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别,也就是xxxx.github.io其中xxx就是你注册GitHub的用户名。我这里是已经建过了,所以会提示。 这样你的仓库就创建好了。 #Step5.SSH相关配置因为需要部署到你的github仓库，每次更改都要deploy ，如果不配置ssh key 每次你都需要输入github 账号密码，太过烦琐。 1.生成SSH 回到你根目录下的git bash窗口中，输入代码： git config --global user.name &quot;yourname&quot;//yourname填写你的github用户名 git config --global user.email &quot;youremail&quot;//youremail填写你的github的邮箱 上面的yourname 和 youremail分别指你的github用户名以及github绑定的邮箱。 可以用以下两条，检查一下你有没有输对： git config user.name git config user.email 然后在执行如下命令生成秘钥和公钥: ssh-keygen -t rsa -C &quot;youremail&quot; 执行了这个命令会提示存储路径和密码以及确认密码，你连续按三次Enter就好 照着上面的存储路径打开id_rsa.pub，将里面所有的内容全部复制出来。 注:id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 2.添加到github 到你的github主页点击右上角头像，setting -&gt; SSH and GPG keys，新建SSH key。 这里的title可以随便填写，我填的是我的用户名。key里面要把你的id_rsa.pub里面的信息复制进去，然后点击Add SSH key 这里验证一下是否连接成功，在根目录下的git bash中输入： ssh -T git@github.com 会有如下提示： The authenticity of host &#39;github.com (52.74.223.119)&#39; can&#39;t be established. RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. Are you sure you want to continue connecting (yes/no)? 输入：yes，会有以下提示： Hi yremp2! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 这表示配置成功，就可以下一步操作了。 #Step6：将Hexo部署到Github1.修改配置文件 这一步是将hexo和Github关联起来，在你的博客根目录（我的是：Blog）下找到 _config.yml， 可以用记事本打开，在最下方找到： deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master repo中yourname是你的用户名。也可以如下获取： 注:配置文件里面所有 : 后面都有一个空格，没有会出错 2.开始部署 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。在根目录下的git bash中输入： npm install hexo-deployer-git --save 然后接着输入： hexo clean hexo g hexo d 注:输入hexo d时可能有时会跳出窗口要你输入username和password。 这个时候在你的github仓库中你会发现会出现跟你博客根目录一样的文件，你的根目录上的文件已经部署到你的github仓库上了。 打开浏览器，输入xxxx.github.io，这里将请按照 你的github用户名.github.io 输入，就可以访问你的博客啦。 #Step7.发布文章 概要 1.首先，你需要了解markdown语法，如果不了解可以百度Markdown 2.主题默认文章Hello World，但不同的Hexo主题md文件格式不一样 3.可以下载编辑器，推荐Typora，界面简洁，方便。 1.编写博客 首先我们看看在安装hexo默认主题landscape的默认文章 （在博客根目录下的 \\source\\_posts 下 ） 如果没有下载编辑器，我们只需在_posts 下新建一个Hello World2.md文件，把文档前面的一部分copy来： --- title: Hello World --- title就是文章的标题，然后我们写一个Hello World2（可自行修改），并且写一点内容： --- title: Hello World2 --- ### 你好 这是我的第一篇博客 2.上传到github 然后在根目录下鼠标右击点git bash在窗口中依次输入： hexo clean hexo g hexo d 完成后就可以看到我们的文章了。 注：如果以后有新的博文上传到github上的博客，请依次执行hexo clean ，hexo g 和hexo d操作。 #8.Hexo常用命令这些是常用的命令，希望对大家有所帮助。 hexo clean //清除缓存 hexo g //生成新数据 hexo d //部署 hexo s //启动本地服务预览 npm install hexo -g //安装Hexo npm update hexo -g //升级 hexo init #初始化博客 hexo server -p 5000 #更改端口 教程完","categories":[{"name":"技术","slug":"技术","permalink":"http://www.tpjun.top/categories/技术/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://www.tpjun.top/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://www.tpjun.top/categories/技术/"}]},{"title":"小网站分享","slug":"自学网","date":"2020-03-24T14:16:01.000Z","updated":"2020-03-27T07:43:50.120Z","comments":true,"path":"2020/03/24/自学网/","link":"","permalink":"http://www.tpjun.top/2020/03/24/自学网/","excerpt":"","text":"#前言个人收集的一些小网站，希望可以帮助大家在未来学习中解决问题，有用的请记得收藏哦！^-^ 1.我要自学网我要自学网是由来自电脑培训学校和职业高校的老师联手创立的一个视频教学网，网站里的视频教程均由经验丰富的在职老师原创录制，里面内容包含有程序设计，网页设计，工业自动，机械设计，影视动画….有很多，对于学计算机的是必不可少的网站。","categories":[{"name":"资源","slug":"资源","permalink":"http://www.tpjun.top/categories/资源/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://www.tpjun.top/tags/悦读/"}],"keywords":[{"name":"资源","slug":"资源","permalink":"http://www.tpjun.top/categories/资源/"}]},{"title":"就那样吧","slug":"就那样吧","date":"2020-03-23T08:07:00.000Z","updated":"2020-03-23T08:26:18.162Z","comments":true,"path":"2020/03/23/就那样吧/","link":"","permalink":"http://www.tpjun.top/2020/03/23/就那样吧/","excerpt":"","text":"给自己一个忠告 认识你的人，了解你的人，越少越好。能沉默，就不要说话。能抓住的绳，别放手。不要去接触不适合自己的人脉，不要去沾染不该沾染的人。所谓的知己，一两就足够。沉住气，别去巴结谁。别人的进步，别人的成功，别人的奇迹，与你无关。得不到的不要去追，能忘掉的不要去想，能让自己生气的东西，永远别去搭理….. 就这样吧！","categories":[{"name":"随笔","slug":"随笔","permalink":"http://www.tpjun.top/categories/随笔/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://www.tpjun.top/tags/悦读/"}],"keywords":[{"name":"随笔","slug":"随笔","permalink":"http://www.tpjun.top/categories/随笔/"}]},{"title":"Hello-World","slug":"hexo-world","date":"2020-03-19T14:16:01.000Z","updated":"2020-03-30T02:35:30.107Z","comments":true,"path":"2020/03/19/hexo-world/","link":"","permalink":"http://www.tpjun.top/2020/03/19/hexo-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"技术","slug":"技术","permalink":"http://www.tpjun.top/categories/技术/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://www.tpjun.top/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://www.tpjun.top/categories/技术/"}]},{"title":"PicGo-jsDelivr-GitHub搭建免费cdn图床","slug":"PicGo-jsDelivr-GitHub","date":"2020-03-19T14:16:01.000Z","updated":"2020-03-30T02:40:54.094Z","comments":true,"path":"2020/03/19/PicGo-jsDelivr-GitHub/","link":"","permalink":"http://www.tpjun.top/2020/03/19/PicGo-jsDelivr-GitHub/","excerpt":"","text":"前言CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术 #简绍该过程有两部分组成第一部分是先搭建jsDelivr-Github，这个过程当然也可以上传图片，但每次上传图片，还要创建新的版本太麻烦了，具体操作看第一部分步骤，第二部分（PicGo-jsDelivr-GitHub）是在第一部分的基础上加了PinGo，通过PinGo上传图片或者复制外链就比较轻松。 #第一部分（jsDelivr-Github）1.首先创建一个Github 由于我创建过了名为CDN的仓库，在这里以CND代替。 注意：仓库名不能重复创建 2.克隆Github仓库到本地去Github仓库，复制仓库的ssh地址。在你本地博客目录中，执行以下命令： | git clone 复制的仓库ssh地址 3.文件上传到Github仓库在你的本地博客目录里你会发现出现了新的名为CDN的文件夹，然后在CDN文件夹中鼠标右击点击Git Bash Here,执行一下命令： | git status //查看状态 | git add . //添加所有文件到暂存区 不要忘记后面那个. | git commit -m &#39;提交信息&#39; //把文件提交到仓库（这个提交信息可以写你第几次提交） | git push //推送至远程仓库 4.发布版本 这样就可以使用了，但每次有新图片上传时，要更新就是发布新版本，更新时就直接使用3,4步就行（第四步的版本号要进行修改）。 由于上面是jsDelivr-Github方法每次更新，太过烦琐，下面是加上PinGo更快速的方法 #第二部分（PicGo-jsDelivr-GitHub） 在第一部分的基础上进行 1.先下载PinGoPinGo下载地址：https://github.com/Molunerfinn/picgo/releases 2.生成token 复制生成的token，（注意勿要关闭网页这个token将不再出现）。 3.配置PinGo设定自定义域名： | https://cdn.jsdelivr.net/gh/CCIT18101030214/CDN/ | https://cdn.jsdelivr.net/gh/用户名/仓库名/ 配置完就可以使用了。但要注意图床是任何人都能看到的，不要上传私密照片。","categories":[{"name":"技术","slug":"技术","permalink":"http://www.tpjun.top/categories/技术/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://www.tpjun.top/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://www.tpjun.top/categories/技术/"}]}]}